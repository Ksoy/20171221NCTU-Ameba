#include <Wire.h>
#include <SeeedOLED.h>
#include <SoftwareSerial.h>
#include <avr/pgmspace.h>
#include "DHT.h"  

#define DATA_LEN 32

uint8_t  int_pms5003[2];
uint8_t buf[DATA_LEN];
static unsigned char logRT[1024];

int DHT_PIN = 2;
DHT dht(DHT_PIN, DHT11);  // for standard DHT library
//DHT dht(DHT_PIN, DHT22);  // for standard DHT library

char c;
SoftwareSerial Serial1(0, 1); // RX, TX

static unsigned char realtek_ch[] PROGMEM ={
0x00, 0x00, 0x1F, 0x1E, 0xF0, 0xF0, 0xFC, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFC, 0xF0, 0xF8, 0x1E, 0x1F, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xE0, 0xE0, 0x20, 0x20, 0x20,
0x60, 0xE0, 0xE0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x03, 0x07, 0x0F, 0xFE, 0xFC, 0xF8, 0x80, 0x80, 0x87, 0x07, 0x00, 0x00,
0x00, 0x00, 0x07, 0x87, 0x80, 0x80, 0xF8, 0xFC, 0x7E, 0x0F, 0x07, 0x03, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x7F, 0x60, 0xE0, 0xE0,
0xE0, 0x9F, 0x1F, 0x0F, 0x07, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x41, 0x41, 0x41, 0x41,
0x41, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0x18, 0x0F, 0x1F, 0xFC, 0xF0, 0xC0, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0xFF,
0xFF, 0xFF, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xC1, 0x41, 0x41, 0x41, 0x41,
0x00, 0x00, 0x00, 0x05, 0xFF, 0xFF, 0xC0, 0xC0, 0xE0, 0x90, 0x0C, 0x06, 0x03, 0x01, 0x00, 0x00,
0x08, 0xA2, 0x11, 0x09, 0x21, 0xA1, 0x10, 0x00, 0xBF, 0x13, 0x33, 0xFF, 0xFF, 0x9F, 0x0E, 0x38,
0x38, 0x0E, 0x8F, 0xFF, 0x83, 0x83, 0x83, 0x13, 0x04, 0xA1, 0x25, 0x09, 0x59, 0x22, 0x04, 0x18,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0x3F, 0x3A, 0x00, 0x00, 0x03,
0x0F, 0x3F, 0x3E, 0x38, 0x30, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0x3F, 0x30, 0x30, 0x30, 0x30,
0x30, 0x00, 0x00, 0x20, 0x1C, 0x07, 0x02, 0x02, 0x02, 0x02, 0x03, 0x07, 0x3F, 0x3E, 0x30, 0x00,
0x00, 0x00, 0x00, 0x3F, 0x3F, 0x3F, 0x30, 0x30, 0x30, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 0x3F,
0x3F, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0x3F, 0x30, 0x30, 0x30, 0x30, 0x30,
0x00, 0x00, 0x00, 0x20, 0x3F, 0x3F, 0x00, 0x01, 0x03, 0x0F, 0x3E, 0x3C, 0x30, 0x20, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0xC0, 0xC1, 0xC0, 0xC0, 0x00,
0xC0, 0xC0, 0xC0, 0x80, 0x00, 0xC1, 0xC0, 0xC0, 0x00, 0x00, 0x80, 0xC0, 0xC0, 0x00, 0x00, 0x00,
0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,
0xC0, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00,
0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0,
0xC0, 0xC0, 0x00, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xC0, 0xC0, 0xC0,
0xC0, 0x80, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x00, 0xC0,
0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0xC1, 0xFF, 0xFF, 0xFF, 0xC1, 0x00,
0xEF, 0xEF, 0xEF, 0xEF, 0xEE, 0xEF, 0xEF, 0xEF, 0xEE, 0xEE, 0xEF, 0xEF, 0xEF, 0x00, 0x00, 0x00,
0x7F, 0xFF, 0xFF, 0xFF, 0xED, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xEC,
0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0xC0, 0xC1, 0xCF, 0xCF, 0xDF, 0xDE, 0xDC, 0xC0, 0xE0,
0xFF, 0xFF, 0xFF, 0xE0, 0xCC, 0xDC, 0xDE, 0xDF, 0xCF, 0xC7, 0xC0, 0x00, 0x00, 0x00, 0x32, 0xF6,
0xF6, 0xF6, 0x00, 0xFD, 0xFD, 0xFD, 0xDD, 0x55, 0x57, 0x57, 0x57, 0x57, 0x55, 0x55, 0xFD, 0xFD,
0xFD, 0xFD, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xBF, 0xB0, 0xBE, 0xBE, 0xFF, 0xFF, 0xFF, 0x00, 0xBF,
0xBF, 0xBF, 0xBF, 0xBF, 0xBD, 0xBF, 0xBF, 0xBF, 0xBF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x81, 0xFF, 0xFF, 0xFF, 0x81, 0x00,
0xFE, 0xFE, 0xFE, 0x0E, 0xFE, 0xFF, 0x0F, 0xFF, 0xFF, 0xFE, 0x0E, 0xFE, 0xFE, 0x00, 0x00, 0x00,
0x80, 0x8E, 0x8E, 0xAE, 0xEE, 0xEE, 0xEE, 0x8E, 0x8F, 0x8F, 0x8F, 0x8F, 0x8E, 0xCE, 0xEE, 0xEE,
0xEE, 0x8E, 0x8E, 0x8C, 0x00, 0x00, 0x00, 0x70, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0xF9,
0xFF, 0xFF, 0xFF, 0xF9, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x00, 0x00, 0x00, 0x5C, 0x7F,
0xEF, 0xEF, 0xEE, 0xEF, 0xED, 0xED, 0xED, 0xED, 0x6D, 0x6D, 0x6D, 0x6D, 0x6D, 0xFD, 0xFD, 0xFD,
0xFD, 0x7D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x6D, 0x6D, 0x6D, 0xFF, 0xFF, 0x00, 0x01, 0x7D,
0xFD, 0xED, 0xED, 0x6D, 0x6D, 0xED, 0xED, 0xFD, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00,
0x03, 0x03, 0x03, 0x00, 0x03, 0x03, 0x00, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00,
0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
0x03, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x00, 0x03, 0x07, 0x07, 0x07, 0x07, 0x03, 0x03,
0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x03, 0x03, 0x03, 0x00, 0x03, 0x03,
0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static unsigned char  Realtek_LogoR[] PROGMEM ={
0x00, 0x00, 0x3F, 0x3F, 0xFF, 0xFC, 0xFC, 0xFF, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80,
0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0xFF, 0xFC, 0xF8, 0xFF, 0x3F, 0x3F,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x60,
0x60, 0x60, 0xE0, 0xE0, 0xE0, 0xC0, 0x80, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80,
0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
0x80, 0x80, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80,
0x00, 0x00, 0x80, 0x80, 0x83, 0x87, 0x87, 0xFF, 0xFF, 0xFF, 0xFC, 0xFC, 0x80, 0x87, 0xBF, 0xBF,
0x30, 0x30, 0x33, 0xB7, 0xBF, 0x80, 0x80, 0xFC, 0xFE, 0xFF, 0xFF, 0x8F, 0x87, 0x87, 0x80, 0x80,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0,
0xF0, 0xF8, 0xFF, 0xFF, 0x1F, 0x0F, 0x07, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xE3, 0xE3, 0xE3,
0xE3, 0xE3, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xF0, 0xFC, 0x3F, 0x7F, 0xFF, 0xFE, 0xFC, 0x80, 0x00,
0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x03, 0x03, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x03, 0x03, 0x03, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xE3, 0xE3, 0xE3,
0xE3, 0xE3, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xE0, 0xF8, 0xFC, 0x9E, 0x8F, 0x07, 0x07, 0x01,
0x7C, 0x7E, 0xFF, 0xFD, 0xFF, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0x1F, 0x1E, 0x0F, 0x0F, 0xFF, 0xFF, 0xC3, 0xC3, 0xC3, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0x7E, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x01,
0x07, 0x0F, 0x1F, 0x3F, 0x3F, 0x3C, 0x38, 0x30, 0x00, 0x38, 0x3F, 0x3F, 0x3F, 0x30, 0x38, 0x38,
0x38, 0x38, 0x00, 0x20, 0x3C, 0x3F, 0x0F, 0x03, 0x03, 0x03, 0x03, 0x03, 0x07, 0x3F, 0x3F, 0x3F,
0x3C, 0x30, 0x00, 0x3F, 0x3F, 0x3F, 0x3F, 0x30, 0x38, 0x38, 0x38, 0x38, 0x00, 0x00, 0x00, 0x3F,
0x3F, 0x3F, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0x3F, 0x3F, 0x30, 0x38, 0x38,
0x38, 0x38, 0x00, 0x00, 0x30, 0x3F, 0x3F, 0x3F, 0x01, 0x07, 0x0F, 0x1F, 0x3F, 0x3E, 0x3C, 0x30,
0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

void setup() {
  Serial.begin(9600);
  Wire.begin();	

  SeeedOled.init();  //initialze SEEED OLED display
  SeeedOled.clearDisplay();           //clear the screen and set start position to top left corner
  SeeedOled.drawBitmap( realtek_ch,1024); 
  delay (3000);
  
  memset(logRT, 0, 1024);
  memcpy(logRT,realtek_ch,384);
  //memset(realtek_ch, 0, 1024);
  //SeeedOled.drawBitmap( realtek_ch,1024);  
  //SeeedOled.drawBitmap( logRT,384); 
  //SeeedOled.setNormalDisplay();       //Set display to Normal mode
  //SeeedOled.setPageMode();            //Set addressing mode to Page Mode
  //SeeedOled.setHorizontalScrollProperties(Scroll_Left,0,7,Scroll_5Frames); //Set Scrolling properties to Scroll Right
  //SeeedOled.activateScroll();             // Activate Scrolling  
  dht.begin();
  delay (1000);
}

int numloop=0;
void loop() {
  if (numloop == 0 ){
    numloop += 1;
    SeeedOled.clearDisplay(); 
    SeeedOled.drawBitmap(logRT,384); 
    //SeeedOled.setHorizontalScrollProperties(Scroll_Left,0,2,Scroll_5Frames); //Set Scrolling properties to Scroll Right
    //SeeedOled.activateScroll();             // Activate Scrolling 
  }

  //Temperature
  float t = dht.readTemperature();
  SeeedOled.setTextXY(4,0);
  SeeedOled.putString("Temp:");
  SeeedOled.putNumber(t);
  SeeedOled.putString("C  "); 

  //Humidity
  float h = dht.readHumidity();
  SeeedOled.setTextXY(5,0);
  SeeedOled.putString("Humi:");
  SeeedOled.putNumber(h);
  SeeedOled.putString("%  ");  

  //PM
  int idx = 0, count = 0;
  Serial1.begin(9600);
  while (true) {
    while (c != 0x42) {
      SeeedOled.setTextXY(6,0);
      SeeedOled.putNumber(c);
      SeeedOled.putString(" ");
      SeeedOled.putNumber(count++);
      while (!Serial1.available());
      c = Serial1.read();
    }
    while (!Serial1.available());
    c = Serial1.read();
    if (c == 0x4d) {
      // now we got a correct header)
      buf[idx++] = 0x42;
      buf[idx++] = 0x4d;
      break;
    }
  }

  while (idx != DATA_LEN) {
    while(!Serial1.available());
    buf[idx++] = Serial1.read();
    //delay(20);
  }
  Serial1.end();

  //PM 1
  int pm1 = ( buf[10] << 8 ) | buf[11];
  SeeedOled.setTextXY(6,0);
  SeeedOled.putString("PM1.0:");
  SeeedOled.putNumber(pm1);
  SeeedOled.putString("ug/m3");  

  //PM 2.5
  int pm2_5 = ( buf[12] << 8 ) | buf[13];
  SeeedOled.setTextXY(7,0);
  SeeedOled.putString("PM2.5:");
  SeeedOled.putNumber(pm2_5);
  SeeedOled.putString("ug/m3");  
  
  //int pm100 = ( buf[14] << 8 ) | buf[15];

  delay(1000);
  
}
